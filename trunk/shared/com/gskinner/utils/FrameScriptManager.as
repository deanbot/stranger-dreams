/*** FrameScriptManager by Grant Skinner. November 13, 2007* Visit www.gskinner.com/blog for documentation, updates and more free code.** You may distribute this class freely, provided it is not modified in any way (including* removing this header or changing the package path).** Please contact info@gskinner.com prior to distributing modified versions of this class.*/package com.gskinner.utils {	import flash.display.MovieClip;	public class FrameScriptManager {	// constants:	// private properties:		private var target:MovieClip;		private var labels:Object;			// public properties:			// constructor:		public function FrameScriptManager(target:MovieClip) {			this.target = target;			updateLabels();		}			// public getter/setters:	// public methods:		public function setFrameScript(frame:*,funct:Function):void {			var frameNum:uint = getFrameNumber(frame);			if (frameNum == 0) { return; }			target.addFrameScript(frameNum-1,funct);		}				public function getFrameNumber(frame:*):uint {			var frameNum:uint = uint(frame);			if (frameNum) { return frameNum; }			var label:String = String(frame);			if (label == null) { return 0; }			frameNum = labels[label];			return frameNum;		}		// private methods:		private function updateLabels():void {			var lbls:Array = target.currentLabels;			labels = {};			for (var i:uint=0; i<lbls.length; i++) {				labels[lbls[i].name] = lbls[i].frame;			}		}	}}